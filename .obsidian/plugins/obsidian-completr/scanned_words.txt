Chemie
CPU
Code
Ameldung
Anmeldung
Anemldung
Abgabe
Aufgabe
Art
Also
Abfolge
Aussage
Alles
Allgemein
Ausführliche
Auslastung
Angnommen
Alternativ
Ansicht
Auf
Anfang
Anfangswert
Ausgabe
Ausgaben
Ausdrucken
Ausführung
Abschied
Außer
Am
VL
Variabelen
Vorwissen
Verzeichnisse
Verzeichnis
Verzeichnise
Verweise
Vorweise
Vaterprozess
Vorlesung
Vater
Variable
Verwenden
Variabele
ggf
gleichzeitig
gleichzeitige
gestoppt
gerufen
genau
gespeichert
gibt
gesetzt
geändert
geladen
geöffnete
geöffneten
genannt
gehen
gereiht
große
globale
globalen
gleich
gewartet
gleichen
gelaufen
TU
Tutorium
Tastatur
BuS
Benutzer
Betriebssystemgrundlagen
Beschreibe
Beispiel
Baum
Bildschrim
Betriebsystem
Bytes
Bedingung
Busy
Bedarf
Belastung
Benutzen
Befehl
Belegen
Beenden
Email
Eingebettet
Ereignissen
Everything
Ein
Erklärung
Ereignis
Es
Echtzeit
Erzeugung
Erreicht
Erstellen
Erklären
Effekte
Erweitern
Ende
Error
DB
Dbis
Die
Damit
Der
Danach
Datei
Dateien
Datein
Dir
Dabei
Dieser
Dadurch
Durch
Diese
Definition
Dies
Des
Durchlauf
Das
Übung
ÜB
Übungsblatt
Stocha
Systeme
Social
Stack
Sammlung
Sie
Satz
Syscalls
Systemcalls
Schlage
Shell
Speichernutzung
System
Sind
Scheduling
Schleife
Solange
Schleifendurchlauf
Sohn
Signal
Sonst
Sohnprozess
UE
Unix
UNIX
FoSAP
Festplatte
Files
Filedescriptor
Funktionalitäten
FD
FDen
Fork
Folien
Funktionalität
Funktion
MaLo
Multitasking
Meta
Methoden
Multiprogramming
Mit
Millisekunden
Modifizieren
Gruppen
Ggf
Geräte
Networks
Nach
NULL
every
einen
einzigen
eine
es
ein
er
erstmal
eines
eingesetzt
enthalten
enthält
entsprechend
etc
einem
einer
erzeugt
eindeutigen
erreicht
ermöglicht
extra
entspricht
eingefügt
ermitteln
eigenen
erst
entsprechenden
week
wegen
werden
würde
warten
wird
wo
wurde
wir
weiter
während
wieder
wenn
wiederhergestellt
was
wie
wiederrum
wichtigen
write
wissen
wichtig
weiteren
waiting
warte
wodurch
wobei
welche
warum
welches
wer
wartet
wait
waitpid
weitermachen
will
wann
Quiz
kann
kommt
können
komplett
keine
kleiner
kill
nur
nacheinander
nötig
nicht
normales
neuen
nun
neben
nirgendswo
normalen
nach
neu
Prozess
Prozesse
Programmcounter
PC
Programm
Position
PID
Prozesszustände
Programms
Prozesszustand
Prozessen
Prozesserzeugung
Prozesssynchronisation
ausführern
ausführung
abfolge
ausführt
andere
ausgeführt
alten
auf
an
aus
alte
aachen
auftreten
ausgelöst
also
aber
auch
abgebildet
aufrufen
als
aufrufenden
anzeigen
aktuell
aktuelle
angegeben
aktiviert
alle
aufgeweckt
am
ausgeben
aufgetretenen
alternierend
angeben
anschließend
analog
von
vor
vorher
verhält
vom
verwaltet
vermuten
viele
verwendet
variable
vornimmt
vorangehende
vorzeitig
mehreren
mehrere
man
merkt
machen
muss
meint
mit
mehr
mal
mittels
ms
meldet
durch
durchlaufen
damit
der
den
dass
die
durchbearbeitet
dem
dann
de
diese
dies
das
des
dazu
diesen
da
durchgehend
dieser
druckt
drucken
doppelt
dieses
dadurch
darf
Interrupts
ISR
Interrupt
Interruptserviceroutine
Interrputs
Interrput
Inhalte
In
Inhalt
Informationen
Inter
IF
Im
II
Innerhalb
Initialisierung
Interval
Ist
Ich
If
lassen
le
lediglich
liest
liegt
Ziel
Zunächst
Zuständen
Zustand
Zahl
Zeit
Zufallszahlen
Zufallszahlengenerator
Zufallswert
ist
im
in
is
identisch
ihr
initialisiert
inklusive
inkrementiert
implementieren
ihres
informiert
schnelle
so
sind
sonst
sodass
selber
schaltet
sie
sich
schreibt
schlie
seine
spezifischer
schreiben
sogar
sein
sehr
stattfinden
sleeping
schnell
sollen
soll
srand
sowie
seinen
sondern
stattdessen
stirb
höhen
hat
hergestellt
haben
hätten
hinten
hilfsfunktionen
Rechen
Routine
Register
Regel
Registern
Richi
Referenzen
Rechenzeit
Running
Rückgabewert
und
uns
unterbrochenen
unverzichtbar
unserer
unnötige
um
unerfolgreicher
Wechselgeschwindigkeit
Wenn
Welt
Wirklichkeit
Wichtig
Was
Wir
Warum
Waiting
Warteschlange
Wert
Weiteren
Wartezeit
Wieso
Wort
WNOHANG
bis
befinden
bekommen
beenden
bereitgestellte
bekommt
bei
beide
behält
bzw
bessere
bleiben
benutzt
belastend
bietet
befindet
betragen
beim
bin
beendet
blockert
betet
jeden
ja
je
jeder
jedes
jedem
fast
festgehalten
freigeschaltet
führt
für
fünf
fork
findet
fordert
feststellen
folgt
folgende
folgender
fertig
Kontext
Kommunikation
Kontrolle
Kernel
Kopie
Kopieprozess
Kindprozess
Kind
Kapitel
Kontextwechsel
Kindprozesses
Konstant
Korrektheit
resettet
richi
rwth
read
repräsentiert
ready
running
reichen
rand
reinitialisiert
realisiert
Hardware
HardwareInterrupt
Hilfe
Hier
counter
close
Omar
Objekt
Objekte
Objekten
Ordnernamen
omar
open
originale
obwohl
oder
ob
Lösung
Linux
tatsächliche
tun
tritt
top
time
töten
terminiert
Jede
zusehen
zugegriffen
zurückgegeben
zurück
zur
zunächst
zwischen
zum
zusammengefasst
zu
ziehen
zuerst
zwar
zuende
über
übergeben
überspringt
öffnen
öffnet
pid
prüft